/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/internal/api/v1/scopes/scope": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent scope
         * @description Finn et spesifikt scope. Krever read-rolle i Azure AD for Forvaltningsadmin.
         */
        get: operations["getScope"];
        /**
         * Oppdater scope
         * @description Endrer scope. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        put: operations["update"];
        post?: never;
        /**
         * Fjern scope
         * @description Slett et scope. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        delete: operations["deleteScope"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/scope_prefix/{prefix}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Oppdater prefix
         * @description Oppdater et scope-prefiks. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        put: operations["updatePrefix"];
        post?: never;
        /**
         * Fjern scope prefix
         * @description Slett et scope prefiks. Krever write-rolle i Azure AD for Forvaltningsadmin. Forutsetter at alle avhengigheter til prefikset (Scope, ScopeAccess) er fjernet.
         */
        delete: operations["deletePrefix"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent klient
         * @description Finn en spesifikk klient. Krever read-rolle i Azure AD for Forvaltningsadmin.
         */
        get: operations["getClient"];
        /**
         * Oppdater klient
         * @description Endre en klient. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        put: operations["updateClient"];
        post?: never;
        /**
         * Slett klient
         * @description Slette en klient. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        delete: operations["deleteClient"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/scopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List alle scopes for autentisert organisasjon.
         * @description Lister alle scopes for autentisert organisasjon med valgfrie filtre for inaktiv status. Krever scope 'idporten:scopes.read' eller 'idporten:scopes.write'.
         */
        get: operations["listForAuthenticatedOrgno"];
        /**
         * Oppdater et scope
         * @description Oppdaterer et eksisterende scope. Den autentiserte organisasjonen må være eier av scopet. Krever scope 'idporten:scopes.write'.
         */
        put: operations["update_1"];
        /**
         * Opprett et nytt scope
         * @description Oppretter et nytt scope. Den autentiserte organisasjonen vil bli eier av scopet. Krever scope 'idporten:scopes.write'.
         */
        post: operations["addScope"];
        /**
         * Slett et scope
         * @description Sletter et eksisterende scope. Den autentiserte organisasjonen må være eier av scopet. Krever scope 'idporten:scopes.write'.
         */
        delete: operations["delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/scopes/access/{consumer_orgno}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Gi en organisasjon tilgang til et scope eid av den autentiserte organisasjonen.
         * @description Gir en organisasjon tilgang til et scope eid av den autentiserte organisasjonen. Krever scope 'idporten:scopes.write'.
         */
        put: operations["create"];
        post?: never;
        /**
         * Fjern tilgang til et scope fra en konsumentorganisasjon.
         * @description Fjerner tilgang til et scope fra en konsumentorganisasjon. Krever scope 'idporten:scopes.write'.
         */
        delete: operations["remove"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/clients/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent en klient
         * @description Henter en klient med angitt id. Klienten må tilhøre samme organisasjonsnummer som autentiserings-tokenet, ellers vil det gis 403 feil. Krever scope 'idporten:dcr.read'.
         */
        get: operations["get"];
        /**
         * Oppdater en klient
         * @description Oppdaterer en klient med angitt id. Klienten må tilhøre samme organisasjonsnummer som autentiserings-tokenet, ellers vil det gis 403 feil. Krever scope 'idporten:dcr.write'.
         */
        put: operations["update_2"];
        post?: never;
        /**
         * Slett en klient
         * @description Sletter en klient med angitt id. Klienten må tilhøre samme organisasjonsnummer som autentiserings-tokenet, ellers vil det gis 403 feil. Krever scope 'idporten:dcr.write'.
         */
        delete: operations["delete_1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/clients/{clientId}/onbehalfof/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent en OnBehalfOf
         * @description Henter en OnBehalfOf for klienten. Krever scope 'idporten:dcr.read'.
         */
        get: operations["get_1"];
        /**
         * Oppdater en OnBehalfOf
         * @description Oppdaterer en eksisterende OnBehalfOf for klienten. Krever scope 'idporten:dcr.write', 'idporten:dcr.modify' eller 'idporten:dcr/onbehalfof.write'.
         */
        put: operations["update_3"];
        post?: never;
        /**
         * Slett en OnBehalfOf
         * @description Sletter en eksisterende OnBehalfOf for klienten. Krever scope 'idporten:dcr.write', 'idporten:dcr.modify' eller 'idporten:dcr/onbehalfof.write'.
         */
        delete: operations["delete_2"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/clients/{clientId}/jwks/{kid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent en enkelt Json Web Key
         * @description Henter en enkelt Json Web Key som klienten har registrert for autentisering. Krever scope 'idporten:dcr.read'.
         */
        get: operations["getSingleKey"];
        /**
         * Legg til eller oppdater en enkelt Json Web Key
         * @description Legger til eller oppdaterer en enkelt Json Web Key til klienten for autentisering. Krever scope 'idporten:dcr.write' eller 'idporten:dcr.modify'.
         */
        put: operations["addOrUpdateSingleKey"];
        post?: never;
        /**
         * Slett en enkelt Json Web Key
         * @description Sletter en enkelt Json Web Key som klienten har registrert for autentisering. Krever scope 'idporten:dcr.modify' eller 'idporten:dcr.write'.
         */
        delete: operations["deleteSingleKey"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/scopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent scopes paginert
         * @description En paginert liste over scopes. Krever read-rolle i Azure AD for Forvaltningsadmin.
         */
        get: operations["getScopesPaged"];
        put?: never;
        /**
         * Opprett scope
         * @description Lag et nytt scope. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        post: operations["addScope_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/scope_prefix": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent scope prefixes paged
         * @description En paginert liste over scope-prefikser. Krever read-rolle i Azure AD for Forvaltningsadmin.
         */
        get: operations["getPrefixesPaged"];
        put?: never;
        /**
         * Opprett prefix
         * @description Lage et ny scope-prefiks. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        post: operations["addPrefix"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent klienter
         * @description En paginert liste over klienter. Krever read-rolle i Azure AD for Forvaltningsadmin.
         */
        get: operations["getClientsPaged"];
        put?: never;
        /**
         * Opprett klient
         * @description Lage en ny klient. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        post: operations["createClient"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{id}/secret": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Oppdater secret
         * @description Genererer og setter ny secret på en klient. Returnerer den nye secret i plaintext. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        post: operations["updateSecret"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{clientId}/onbehalfof": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Legge til on behalf of
         * @description Legge til on behalf of på en klient. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        post: operations["createOnBehalfOfClient"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{clientId}/onbehalfof/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Oppdatere klient on behalf of
         * @description Redigere en klient on behalf of. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        post: operations["updateOnBehalfOfClient"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{clientId}/jwk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Legge til nøkkel
         * @description Opprette eller oppdatere en JWK basert på input (sertifikat eller offentlig nøkkel i PEM-format, alternativt JWK) og legge den til klienten
         */
        post: operations["addOrReplaceJwk"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{clientId}/jwk/renew/{kid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Fornye nøkkel
         * @description Fornye Json Web Key for en klient. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        post: operations["renewJsonWebKey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v2/clients/{clientId}/key": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Legg til en nøkkel
         * @description Legger til en nøkkel for klienten for autentisering. Nøkkelen kan være et sertifikat eller en offentlig nøkkel i JWK- eller PEM-format. Krever scope 'idporten:dcr.write' eller 'idporten:dcr.modify'.
         */
        post: operations["addKey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/vw1/datasharing/consumer/client": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent alle Maskinporten-integrasjoner
         * @description Henter en liste over alle Maskinporten-integrasjoner for organisasjoner som den autentiserte brukeren har skrive- eller nøkkelrolle for. Krever scope 'idporten:dcr.datasharing'.
         */
        get: operations["retrieveAllMaskinportenIntegrations"];
        put?: never;
        /**
         * Opprett en ny Maskinporten-integrasjon
         * @description Oppretter en ny Maskinporten-integrasjon for en organisasjon. Krever scope 'idporten:dcr.datasharing'.
         */
        post: operations["makeNewMaskinportenIntegration"];
        /**
         * Slett en Maskinporten-klient
         * @description Sletter en Maskinporten-klient for en organisasjon. Krever scope 'idporten:dcr.datasharing'.
         */
        delete: operations["deleteClient_1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/clients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent klienter
         * @description Returnerer en liste over alle klientene som tilhører organisasjonsnummeret man er autentisert med. Krever scope 'idporten:dcr.read'.
         */
        get: operations["listMyClients"];
        put?: never;
        /**
         * Opprett en klient
         * @description Oppretter en ny klient. Klienten må tilhøre samme organisasjonsnummer som autentiserings-tokenet, ellers vil det gis 403 feil. Krever scope 'idporten:dcr.write'.
         */
        post: operations["create_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/clients/{id}/secret": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Oppdater hemmelighet
         * @description Oppdaterer hemmeligheten til en klient. Hemmeligheten blir generert på nytt og returnert i klartekst.<br />Krever scope 'idporten:dcr.write'.
         */
        post: operations["updateSecret_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/clients/{clientId}/onbehalfof": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent alle OnBehalfOf for en klient
         * @description Henter alle OnBehalfOf for en klient. Krever scope 'idporten:dcr.read'.
         */
        get: operations["getAllForClient"];
        put?: never;
        /**
         * Opprett en ny OnBehalfOf
         * @description Oppretter en ny OnBehalfOf for klienten. Krever scope 'idporten:dcr.write', 'idporten:dcr.modify' eller 'idporten:dcr/onbehalfof.write'.
         */
        post: operations["create_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/clients/{clientId}/jwks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent Json Web Key Set (JWKS)
         * @description Henter Json Web Key Set (JWKS) for klienten for autentisering. Krever scope 'idporten:dcr.read'.
         */
        get: operations["get_2"];
        put?: never;
        /**
         * Erstatt Json Web Key Set (JWKS)
         * @description Legger til et Json Web Key Set (JWKS) til klienten for autentisering. Dette settet vil erstatte eksisterende JWKS. Krever scope 'idporten:dcr.write' eller 'idporten:dcr.modify'.
         */
        post: operations["replace"];
        /**
         * Slett Json Web Key Set (JWKS)
         * @description Sletter Json Web Key Set (JWKS) for klienten for autentisering. Krever scope 'idporten:dcr.modify' eller 'idporten:dcr.write'.
         */
        delete: operations["delete_3"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/switch-synth-org": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Endre hvilken syntetisk organisasjon brukeren representerer
         * @description Endrer syntetisk organisasjonsnummer som er knyttet til den autentiserte syntetisk brukeren. Krever ingen scopes.
         */
        post: operations["switchSyntheticOrganization"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/organizations/{orgnr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent organisasjonsnavn
         * @description Henter navnet til en organisasjon basert på organisasjonsnummer. Prøver først i egen cachet db, hvis ikke det finnes der sjekker vi direkte i brreg. Krever ingen autentisering
         */
        get: operations["getOrganizationName"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/organization-statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent organisasjonsstatistikk
         * @description Henter antall prefix, scopes og konsumenter av hvert scope per organisasjon fra ulike tabeller.
         */
        get: operations["getOrganizationStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/organization-statistics/{organizationNumber}/keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent alle nøkler til en organisasjon
         * @description Finn nøkler til alle klienter tilhørende en organisasjon, sortert på utløpsdato
         */
        get: operations["getAllOrganizationKeys"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/scopes/scope": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent et scope
         * @description Henter et scope med angitt navn. Scopet må tilhøre samme organisasjonsnummer som autentiserings-tokenet, ellers vil det gis 403 feil. Krever scope 'idporten:scopes.read'.
         */
        get: operations["getScope_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/scopes/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List alle scopes.
         * @description Lister alle scopes med valgfrie filtre for prefiks, inaktiv status, delegerte kilder,
         *     tilgjengelighet for alle og klientens integrasjonstype.
         */
        get: operations["listAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/scopes/access": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List tilganger gitt av den autentiserte organisasjonen til konsumenter.
         * @description Returnerer enten alle scopes gitt til en gitt konsumentorganisasjon eller alle konsumenter for et gitt scope. Krever scope 'idporten:scopes.read'.
         */
        get: operations["list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/scopes/access/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List alle scope tilganger som er gitt til den autentiserte organisasjonen.
         * @description Returnerer alle scope tilganger som er gitt til den autentiserte organisasjonen. Inkluderer inaktive tilganger hvis 'inactive' er satt til 'true'. Krever scope 'idporten:scopes.read'.
         */
        get: operations["listByOrgno"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/prefix": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List alle scope prefikser for den autentiserte organisasjonen.
         * @description Endepunkt for å liste ut alle registrerte prefikser for den autentiserte organisasjonen. Krever scope 'idporten:scopes.read' eller 'idporten:scopes.write'.
         */
        get: operations["listForOrgno"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/prefix/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste ut alle scope prefikser.
         * @description Endepunkt for å liste ut alle registrerte prefikser. Krever ingen autentisering
         */
        get: operations["list_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organizations/{orgnr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent organisasjonsnavn
         * @description Henter navnet til en organisasjon basert på organisasjonsnummer. Prøver først i egen cachet db, hvis ikke det finnes der sjekker vi direkte i brreg. Krever ingen autentisering
         */
        get: operations["getOrganizationName_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/integrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent klienter / integrasjoner
         * @description Henter en liste over alle klienter
         */
        get: operations["listIntegrations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/delegationsources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent delegeringskilder
         * @description Returnerer en liste over alle delegeringskilder.
         */
        get: operations["listAllDelegationSources"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/datasharing/consumer/scope/access": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent alle godkjente scope tilganger
         * @description Henter en liste over alle godkjente scope tilganger for organisasjoner som den autentiserte brukeren har skrive- eller nøkkelrolle for. Krever scope 'idporten:dcr.datasharing'.
         */
        get: operations["getAllApprovedScopeAccesses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returnerer informasjon om organisasjonen som brukeren representerer
         * @description Returnerer organisasjonsnavn, organisasjonsnummer og om organisasjonen er syntetisk eller ikke. Krever ingen scopes.
         */
        get: operations["getOrganizationForAuthenticatedUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/apis": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent API-er
         * @description Henter en liste over alle organisasjoner og deres prefikser (API-er), samt antall forbrukere av integrasjonen
         */
        get: operations["listIntegrationAPI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cloudsync/api/v1/cloud/sync/scopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent liste over scopes
         * @description Returnerer en paginert liste over scopes basert på angitte filtre. Sortert på created stigende. Krever scope 'idporten:cloud.read'.
         */
        get: operations["listAllScopes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cloudsync/api/v1/cloud/sync/scopeaccess": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent liste over scope-tilganger
         * @description Returnerer en paginert liste over scope-tilganger basert på angitte filtre. Krever scope 'idporten:cloud.read'.
         */
        get: operations["getScopeAccess"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cloudsync/api/v1/cloud/sync/prefixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent liste over alle scope-prefikser
         * @description Returnerer en paginert liste over alle scope-prefikser basert på angitte filtre. Krever scope 'idporten:cloud.read'.
         */
        get: operations["listAllScopePrefixes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cloudsync/api/v1/cloud/sync/clients/maskinporten": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent liste over klienter i Maskinporten format
         * @description Returnerer en paginert liste over Maskinporten-klienter basert på angitte filtre. Sortert på created stigende. Merk at det ikke er noe default filtrering på bare maskinporten-klienter. Krever scope 'idporten:cloud.read'.
         */
        get: operations["listMaskinportenClients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cloudsync/api/v1/cloud/sync/clients/idporten": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Hent liste over klienter i Idporten format
         * @description Returnerer en paginert liste over Idporten-klienter basert på angitte filtre. Sortert på created stigende. Merk at det ikke er noe default filtrering på bare idporten-klienter. Krever scope 'idporten:cloud.read'.
         */
        get: operations["listIdportenClients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{clientId}/onbehalfof/{onBehalfOfId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Slette on behalf of
         * @description Fjerne on behalf of fra en klient. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        delete: operations["deleteOnBehalfOfClient"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/internal/api/v1/clients/{clientId}/jwk/{kid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Slette nøkkel
         * @description Slette Json Web Key for en klient. Krever write-rolle i Azure AD for Forvaltningsadmin.
         */
        delete: operations["deleteJwk"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description A single specific error */
        ApiError: {
            errorMessage?: string;
            isFieldError?: boolean;
            objectName?: string;
            fieldIdentifier?: string;
        };
        /** @description A response containing information about errors from the API */
        ApiErrorResponse: {
            /** Format: int32 */
            status?: number;
            /** Format: date-time */
            timestamp?: string;
            correlation_id?: string;
            /** @description A list of specific errors */
            errors?: components["schemas"]["ApiError"][];
            error?: string;
            error_description?: string;
        };
        Scope_ScopeInternal: {
            prefix?: string;
            description?: string;
            subscope?: string;
            long_description?: string;
            /** Format: date-time */
            readonly last_updated?: string;
            active?: boolean;
            /** Format: date-time */
            readonly created?: string;
            /** @description Bare klienter med følgende integrasjonstyper kan bruke dette scopet */
            allowed_integration_types?: ("ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten")[];
            owner_orgno?: string;
            /** @enum {string} */
            token_type?: "SELF_CONTAINED" | "OPAQUE";
            /** @enum {string} */
            visibility?: "INTERNAL" | "PRIVATE" | "PUBLIC";
            requires_user_consent?: boolean;
            requires_user_authentication?: boolean;
            requires_pseudonymous_tokens?: boolean;
            delegation_source?: string;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for utstedt access_token
             */
            at_max_age?: number;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for autorisasjonen
             */
            authorization_max_lifetime?: number;
            accessible_for_all?: boolean;
            enforced_aud_for_access_token?: string;
            delegations?: {
                [key: string]: string[];
            };
            orphanedDelegations?: {
                [key: string]: string[];
            };
            name?: string;
        };
        ScopePrefix: {
            prefix?: string;
            owner_orgno?: string;
            organization_name?: string;
            /** Format: date-time */
            readonly last_updated?: string;
            active?: boolean;
            /** Format: date-time */
            readonly created?: string;
        };
        UpdateClientRequest: {
            /** @description Id på klient som skal oppdateres */
            client_id?: string;
            /**
             * @description Navn på klient, blir vist ved innlogging
             * @example Min eksempelklient
             */
            client_name?: string;
            /** @description Klienten sitt organisasjonsnummer. Må stemme med autentisert avsender, eller avsender må være leverandør med scopet idporten:dcr.supplier. */
            client_orgno?: string;
            /** @description Leverandøren sitt organisasjonsnummer. Skal kun settes hvis avsender har idporten:dcr.supplier og client_orgno er satt til noe annet enn avsenders orgno */
            supplier_orgno?: string;
            /**
             * @description Beskrivelse av klienten, ikke synlig for innbyggere, men blir lagret i Digdirs støttesystemer
             * @example Viser noen eksempelverdier
             */
            description?: string;
            /** @description Angir om klienten er aktiv eller ikke. Inaktive klienter vil ikke bli synkronisert til ID-porten/maskinporten/ansattporten. Settes default til true */
            active?: boolean;
            /**
             * @description Applikasjonstype
             * @example web
             * @enum {string}
             */
            application_type?: "web" | "browser" | "native";
            /**
             * @description Integrasjonstype
             * @example idporten
             * @enum {string}
             */
            integration_type?: "ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten";
            /**
             * @description Liste over scopes som klienten kan forespørre. For OpenID Connect er aktuelle scopes openid og profile. For API-sikring, ta kontakt med oss
             * @example [
             *       "openid",
             *       "profile",
             *       "idporten:dcr.read"
             *     ]
             */
            scopes?: string[];
            /** @description Tillatte Grant Types for klient. Implicit skal ikke tas i bruk av nye klienter(deprecated). */
            grant_types?: ("authorization_code" | "implicit" | "refresh_token" | "urn:ietf:params:oauth:grant-type:jwt-bearer")[];
            /**
             * @description Autentiseringsmetode for klient. None anbefales for klienter som kjører i nettleser eller på mobil
             * @example client_secret_basic
             * @enum {string}
             */
            token_endpoint_auth_method?: "client_secret_post" | "client_secret_basic" | "private_key_jwt" | "none";
            /**
             * Format: int64
             * @description Levetid i sekunder for utstedt refresh_token.
             * @default 600
             */
            refresh_token_lifetime?: number;
            /**
             * @description Ved REUSE kan refresh_token benyttes flere ganger.  Ved ONETIME kan refresh_token kun benyttes en gang.
             * @enum {string}
             */
            refresh_token_usage?: "REUSE" | "ONETIME";
            /**
             * Format: int64
             * @description Levetid i sekunder for utstedt access_token.
             * @default 120
             */
            access_token_lifetime?: number;
            /**
             * Format: int64
             * @description Levetid for registrert autorisasjon i sekunder. I en OpenID Connect sammenheng vil dette være tilgangen til userinfo-endepunktet.
             * @default 7200
             */
            authorization_lifetime?: number;
            logo_uri?: string;
            /**
             * @description Liste over gyldige url’er som vi kan redirecte tilbake til etter vellykket autorisasjonsforespørsel
             * @example [
             *       "http://localhost/myService"
             *     ]
             */
            redirect_uris?: string[];
            /**
             * @description Liste over url’er som vi redirecter til etter fullført utlogging
             * @example [
             *       "http://localhost/myService/loggedout"
             *     ]
             */
            post_logout_redirect_uris?: string[];
            /** @description Flagg som bestemmer om parameterne for issuer og sesjons-id skal sendes med frontchannel_logout_uri */
            frontchannel_logout_session_required?: boolean;
            /** @description URL som vi sender request til ved utlogging trigget av annen klient i samme sesjon */
            frontchannel_logout_uri?: string;
            /** @description Flagg for å disable sso. Dette vil gjøre at brukeren må logge inn på nytt for din klient. Dette er kun relevant for OpenID Connect. Om ikke satt, vil default være false for ID-porten og true for Ansattporten */
            sso_disabled?: boolean;
            /**
             * @description Code challenge method for PKCE. Gyldige verdier er none eller S256. Dette er kun relevant for OpenID Connect. Om ikke satt, vil default bli S256.
             * @enum {string}
             */
            code_challenge_method?: "none" | "S256";
        };
        ClientOnBehalfOf: {
            /** @description ID for onbehalfof klient. Fulle klient navn blir <client_id>::<onbehalfof_verdi> */
            onbehalfof?: string;
            /** @description Navn på klient, blir vist ved innlogging */
            name?: string;
            /** @description Klienten sitt organisasjonsnummer */
            orgno?: string;
            /** @description Organisasjonsnavnet som tilhører organisasjonsnummeret */
            organization_name?: string;
            /** @description Beskrivelse av klienten, ikke synlig for innbyggere, men blir lagret i Digdir sine støttesystemer */
            description?: string;
            uri?: string;
            logo_uri?: string;
            /** Format: date-time */
            readonly last_updated?: string;
            /** Format: date-time */
            readonly created?: string;
        };
        ClientResponse: {
            client_id?: string;
            /** @description Navn på klient, blir vist ved innlogging */
            client_name?: string;
            /** @description Klienten sitt organisasjonsnummer. */
            client_orgno?: string;
            /** @description Leverandøren sitt organisasjonsnummer. */
            supplier_orgno?: string;
            /** @description Beskrivelse av klienten, ikke synlig for innbyggere. */
            description?: string;
            active?: boolean;
            /** Format: date-time */
            created?: string;
            /** Format: date-time */
            last_updated?: string;
            /**
             * @description Applikasjonstype
             * @example web
             * @enum {string}
             */
            application_type?: "web" | "browser" | "native";
            /**
             * @description Integrasjonstype
             * @example idporten
             * @enum {string}
             */
            integration_type?: "ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten";
            /**
             * @description Liste over scopes som klienten kan forespørre.
             * @example [
             *       "openid",
             *       "profile",
             *       "idporten:dcr.read"
             *     ]
             */
            scopes?: string[];
            /** @description Tillatte Grant Types for klient. */
            grant_types?: ("authorization_code" | "implicit" | "refresh_token" | "urn:ietf:params:oauth:grant-type:jwt-bearer")[];
            /**
             * @description Autentiseringsmetode for klient.
             * @example client_secret_basic
             * @enum {string}
             */
            token_endpoint_auth_method?: "client_secret_post" | "client_secret_basic" | "private_key_jwt" | "none";
            /**
             * Format: int64
             * @description Levetid i sekunder for utstedt refresh_token
             */
            refresh_token_lifetime?: number;
            /**
             * @description Ved REUSE kan refresh_token benyttes flere ganger.  Ved ONETIME kan refresh_token kun benyttes en gang.
             * @enum {string}
             */
            refresh_token_usage?: "REUSE" | "ONETIME";
            /**
             * Format: int64
             * @description Levetid i sekunder for utstedt access_token
             */
            access_token_lifetime?: number;
            /**
             * Format: int64
             * @description Levetid for registrert autorisasjon i sekunder. I en OpenID Connect sammenheng vil dette være tilgangen til userinfo-endepunktet.
             */
            authorization_lifetime?: number;
            onbehalfof?: components["schemas"]["ClientOnBehalfOf"][];
            /** @description Secret kan ikke settes direkte. Secret blir generert ved behov og dette feltet er kun for retur av secret */
            client_secret?: string;
            jwks?: components["schemas"]["JsonWebKeyWrapper"];
            /** @description Uri til JWKS om satt. Kan kun leses ut, ikke settes. */
            jwks_uri?: string;
            logo_uri?: string;
            /**
             * @description Liste over gyldige url’er som vi kan redirecte tilbake til etter vellykket autorisasjonsforespørsel
             * @example [
             *       "http://localhost/myService"
             *     ]
             */
            redirect_uris?: string[];
            /**
             * @description Liste over url’er som vi redirecter til etter fullført utlogging
             * @example [
             *       "http://localhost/myService/loggedout"
             *     ]
             */
            post_logout_redirect_uris?: string[];
            /** @description Flagg som bestemmer om parameterne for issuer og sesjons-id skal sendes med frontchannel_logout_uri */
            frontchannel_logout_session_required?: boolean;
            /** @description URL som vi sender request til ved utlogging trigget av annen klient i samme sesjon */
            frontchannel_logout_uri?: string;
            /** @description Flagg for å disable sso. Dette vil gjøre at brukeren må logge inn på nytt for din klient. Dette er kun relevant for OpenID Connect. */
            sso_disabled?: boolean;
            /**
             * @description Code challenge method for PKCE. Gyldige verdier er none eller S256. Dette er kun relevant for OpenID Connect.
             * @enum {string}
             */
            code_challenge_method?: "none" | "S256";
        };
        JsonWebKey: {
            /** @enum {string} */
            kty?: "RSA";
            kid?: string;
            /** @enum {string} */
            use?: "sig";
            /** @enum {string} */
            alg?: "RS256" | "RS512";
            n?: string;
            e?: string;
            x5c?: string[];
            /** Format: int64 */
            exp?: number;
            /** Format: date-time */
            created?: string;
            /** Format: date-time */
            last_updated?: string;
        };
        JsonWebKeyWrapper: {
            keys?: components["schemas"]["JsonWebKey"][];
        };
        Scope_ScopeExternal: {
            prefix?: string;
            description?: string;
            subscope?: string;
            long_description?: string;
            /** Format: date-time */
            readonly last_updated?: string;
            active?: boolean;
            /** Format: date-time */
            readonly created?: string;
            /** @description Bare klienter med følgende integrasjonstyper kan bruke dette scopet */
            allowed_integration_types?: ("ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten")[];
            owner_orgno?: string;
            /** @enum {string} */
            token_type?: "SELF_CONTAINED" | "OPAQUE";
            /** @enum {string} */
            visibility?: "INTERNAL" | "PRIVATE" | "PUBLIC";
            requires_user_consent?: boolean;
            requires_user_authentication?: boolean;
            requires_pseudonymous_tokens?: boolean;
            delegation_source?: string;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for utstedt access_token
             */
            at_max_age?: number;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for autorisasjonen
             */
            authorization_max_lifetime?: number;
            accessible_for_all?: boolean;
            enforced_aud_for_access_token?: string;
            name?: string;
        };
        ScopeAccess: {
            scope?: string;
            owner_orgno?: string;
            owner_organization_name?: string;
            consumer_orgno?: string;
            consumer_organization_name?: string;
            /** @enum {string} */
            state?: "REQUESTED" | "APPROVED" | "DENIED";
            /** Format: date-time */
            created?: string;
            /** Format: date-time */
            last_updated?: string;
        };
        AddClientRequest: {
            /** @description Id på klient, må være unik. Blir autogenerert ved opprettelse av klient om den ikke er spesifikt satt */
            client_id?: string;
            /**
             * @description Navn på klient, blir vist ved innlogging
             * @example Min eksempelklient
             */
            client_name?: string;
            /** @description Klienten sitt organisasjonsnummer. Må stemme med autentisert avsender, eller avsender må være leverandør med scopet idporten:dcr.supplier. */
            client_orgno?: string;
            /** @description Leverandøren sitt organisasjonsnummer. Skal kun settes hvis avsender har idporten:dcr.supplier og client_orgno er satt til noe annet enn avsenders orgno */
            supplier_orgno?: string;
            /**
             * @description Beskrivelse av klienten, ikke synlig for innbyggere, men blir lagret i Digdirs støttesystemer
             * @example Viser noen eksempelverdier
             */
            description?: string;
            /** @description Angir om klienten er aktiv eller ikke. Inaktive klienter vil ikke bli synkronisert til ID-porten/maskinporten/ansattporten. Settes default til true */
            active?: boolean;
            /**
             * @description Applikasjonstype
             * @example web
             * @enum {string}
             */
            application_type?: "web" | "browser" | "native";
            /**
             * @description Integrasjonstype
             * @example idporten
             * @enum {string}
             */
            integration_type?: "ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten";
            /**
             * @description Liste over scopes som klienten kan forespørre. For OpenID Connect er aktuelle scopes openid og profile. For API-sikring, ta kontakt med oss
             * @example [
             *       "openid",
             *       "profile",
             *       "idporten:dcr.read"
             *     ]
             */
            scopes?: string[];
            /** @description Tillatte Grant Types for klient. Implicit skal ikke tas i bruk av nye klienter(deprecated). */
            grant_types?: ("authorization_code" | "implicit" | "refresh_token" | "urn:ietf:params:oauth:grant-type:jwt-bearer")[];
            /**
             * @description Autentiseringsmetode for klient. None anbefales for klienter som kjører i nettleser eller på mobil
             * @example client_secret_basic
             * @enum {string}
             */
            token_endpoint_auth_method?: "client_secret_post" | "client_secret_basic" | "private_key_jwt" | "none";
            /**
             * Format: int64
             * @description Levetid i sekunder for utstedt refresh_token.
             * @default 600
             */
            refresh_token_lifetime?: number;
            /**
             * @description Ved REUSE kan refresh_token benyttes flere ganger.  Ved ONETIME kan refresh_token kun benyttes en gang.
             * @enum {string}
             */
            refresh_token_usage?: "REUSE" | "ONETIME";
            /**
             * Format: int64
             * @description Levetid i sekunder for utstedt access_token.
             * @default 120
             */
            access_token_lifetime?: number;
            /**
             * Format: int64
             * @description Levetid for registrert autorisasjon i sekunder. I en OpenID Connect sammenheng vil dette være tilgangen til userinfo-endepunktet.
             * @default 7200
             */
            authorization_lifetime?: number;
            logo_uri?: string;
            /**
             * @description Liste over gyldige url’er som vi kan redirecte tilbake til etter vellykket autorisasjonsforespørsel
             * @example [
             *       "http://localhost/myService"
             *     ]
             */
            redirect_uris?: string[];
            /**
             * @description Liste over url’er som vi redirecter til etter fullført utlogging
             * @example [
             *       "http://localhost/myService/loggedout"
             *     ]
             */
            post_logout_redirect_uris?: string[];
            /** @description Flagg som bestemmer om parameterne for issuer og sesjons-id skal sendes med frontchannel_logout_uri */
            frontchannel_logout_session_required?: boolean;
            /** @description URL som vi sender request til ved utlogging trigget av annen klient i samme sesjon */
            frontchannel_logout_uri?: string;
            /** @description Flagg for å disable sso. Dette vil gjøre at brukeren må logge inn på nytt for din klient. Dette er kun relevant for OpenID Connect. Om ikke satt, vil default være false for ID-porten og true for Ansattporten */
            sso_disabled?: boolean;
            /**
             * @description Code challenge method for PKCE. Gyldige verdier er none eller S256. Dette er kun relevant for OpenID Connect. Om ikke satt, vil default bli S256.
             * @enum {string}
             */
            code_challenge_method?: "none" | "S256";
        };
        SecretResponse: {
            secret?: string;
        };
        KeyResponse: {
            kid?: string;
        };
        CreateMaskinportenIntegrationRequestResource: {
            scopes?: string[];
            description?: string;
            keys?: components["schemas"]["JsonWebKey"][];
        };
        MaskinportenIntegrationResource: {
            clientId?: string;
            description?: string;
            consumerOrgNr?: string;
            scopes?: string[];
            keys?: components["schemas"]["JsonWebKey"][];
        };
        OidcJwksRequestResponse: {
            /**
             * @description jwks. Nøkkelsettet man ønsker å knytte til klienten. En unik nøkkel-id(kid) må oppgis for hver nøkkel. Maks 5 pr request.
             * @example [
             *       {
             *         "kid": "exampleKid",
             *         "use": "sig",
             *         "alg": "RS256",
             *         "kty": "RSA",
             *         "n": "exampleModulus",
             *         "e": "AQAB",
             *         "exp": 1234567890,
             *         "x5c": [
             *           "exampleCertificate"
             *         ]
             *       }
             *     ]
             */
            keys?: components["schemas"]["JsonWebKey"][];
        };
        SwitchOrgRequest: {
            orgno?: string;
        };
        AuthenticatedOrganization: {
            authenticated_organization_number?: string;
            authenticated_organization_name?: string;
            is_synthetic_organization_number?: boolean;
            has_consented?: boolean;
        };
        PageMetadata_ScopeInternal: {
            /** Format: int64 */
            size?: number;
            /** Format: int64 */
            number?: number;
            /** Format: int64 */
            totalElements?: number;
            /** Format: int64 */
            totalPages?: number;
        };
        PagedModelScope_ScopeInternal: {
            content?: components["schemas"]["Scope_ScopeInternal"][];
            page?: components["schemas"]["PageMetadata_ScopeInternal"];
        };
        ScopeAccess_ScopeInternalWithScopeAccess: {
            scope?: string;
            owner_orgno?: string;
            owner_organization_name?: string;
            consumer_orgno?: string;
            consumer_organization_name?: string;
            /** @enum {string} */
            state?: "REQUESTED" | "APPROVED" | "DENIED";
            /** Format: date-time */
            created?: string;
            /** Format: date-time */
            last_updated?: string;
        };
        Scope_ScopeInternalWithScopeAccess: {
            prefix?: string;
            description?: string;
            subscope?: string;
            long_description?: string;
            /** Format: date-time */
            readonly last_updated?: string;
            active?: boolean;
            /** Format: date-time */
            readonly created?: string;
            /** @description Bare klienter med følgende integrasjonstyper kan bruke dette scopet */
            allowed_integration_types?: ("ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten")[];
            owner_orgno?: string;
            /** @enum {string} */
            token_type?: "SELF_CONTAINED" | "OPAQUE";
            /** @enum {string} */
            visibility?: "INTERNAL" | "PRIVATE" | "PUBLIC";
            requires_user_consent?: boolean;
            requires_user_authentication?: boolean;
            requires_pseudonymous_tokens?: boolean;
            delegation_source?: string;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for utstedt access_token
             */
            at_max_age?: number;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for autorisasjonen
             */
            authorization_max_lifetime?: number;
            accessible_for_all?: boolean;
            enforced_aud_for_access_token?: string;
            access?: components["schemas"]["ScopeAccess_ScopeInternalWithScopeAccess"][];
            delegations?: {
                [key: string]: string[];
            };
            orphanedDelegations?: {
                [key: string]: string[];
            };
            name?: string;
        };
        PageMetadata: {
            /** Format: int64 */
            size?: number;
            /** Format: int64 */
            number?: number;
            /** Format: int64 */
            totalElements?: number;
            /** Format: int64 */
            totalPages?: number;
        };
        PagedModelScopePrefix: {
            content?: components["schemas"]["ScopePrefix"][];
            page?: components["schemas"]["PageMetadata"];
        };
        Organization: {
            orgnr?: string;
            name?: string;
        };
        OrganizationStatisticsEntity: {
            orgno?: string;
            name?: string;
            /** Format: int64 */
            prefixCount?: number;
            /** Format: int64 */
            scopeCount?: number;
            /** Format: int64 */
            consumerCount?: number;
        };
        PageOrganizationStatisticsEntity: {
            /** Format: int32 */
            totalPages?: number;
            /** Format: int64 */
            totalElements?: number;
            /** Format: int32 */
            size?: number;
            content?: components["schemas"]["OrganizationStatisticsEntity"][];
            /** Format: int32 */
            number?: number;
            sort?: components["schemas"]["SortObject"];
            pageable?: components["schemas"]["PageableObject"];
            first?: boolean;
            last?: boolean;
            /** Format: int32 */
            numberOfElements?: number;
            empty?: boolean;
        };
        PageableObject: {
            /** Format: int64 */
            offset?: number;
            sort?: components["schemas"]["SortObject"];
            paged?: boolean;
            /** Format: int32 */
            pageNumber?: number;
            /** Format: int32 */
            pageSize?: number;
            unpaged?: boolean;
        };
        SortObject: {
            empty?: boolean;
            sorted?: boolean;
            unsorted?: boolean;
        };
        ClientJsonWebKey: {
            clientId?: string;
            /** Format: int64 */
            id?: number;
            jsonWebKey?: components["schemas"]["JsonWebKey"];
        };
        PagedModelClientResponse: {
            content?: components["schemas"]["ClientResponse"][];
            page?: components["schemas"]["PageMetadata"];
        };
        IntegrationResource: {
            /** Format: date-time */
            created?: string;
            id?: string;
            description?: string;
            customer_organization_number?: string;
            supplier_organization_number?: string;
            supplier_integration_id?: string;
            /** @enum {string} */
            integration_type?: "IDPORTEN_SAML2" | "IDPORTEN_SAML2_ONBEHALF" | "IDPORTEN_OIDC" | "IDPORTEN_OIDC_ONBEHALFOF" | "KRR_REST" | "KRR_REST_ONBEHALFOF" | "KRR_SOAP" | "KRR_SOAP_ONBEHALFOF" | "EFORMIDLING_DPI" | "EFORMIDLING_DPI_ONBEHALFOF" | "EFORMIDLING_DPV" | "EFORMIDLING_DPV_ONBEHALFOF" | "EFORMIDLING_DPO" | "EFORMIDLING_DPO_ONBEHALFOF" | "EFORMIDLING_DPE" | "EFORMIDLING_DPE_ONBEHALFOF" | "EFORMIDLING_DPF" | "EFORMIDLING_DPF_ONBEHALFOF" | "API_KLIENT" | "MASKINPORTEN";
            /** Format: date-time */
            last_updated?: string;
            active?: boolean;
        };
        DelegationSource: {
            /** @description Issuer */
            issuer?: string;
            /** @description Navn på issuer */
            name?: string;
            /** Format: date-time */
            created?: string;
            /** Format: date-time */
            lastUpdated?: string;
        };
        ScopeDetailsResource: {
            scope?: string;
            /** @enum {string} */
            state?: "REQUESTED" | "APPROVED" | "DENIED";
            description?: string;
            active?: boolean;
            consumer_orgno?: string;
            /** Format: date-time */
            readonly created?: string;
            /** Format: date-time */
            readonly last_updated?: string;
            owner_orgno?: string;
            allowed_integration_types?: ("ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten")[];
        };
        APIsResource: {
            customer_organization_number?: string;
            prefix?: string[];
            /** Format: int32 */
            consumer_count?: number;
        };
        CloudSyncScope: {
            name?: string;
            description?: string;
            long_description?: string;
            scopeDescriptions?: {
                [key: string]: string;
            };
            active?: boolean;
            /** Format: int64 */
            created?: number;
            /** Format: int64 */
            last_updated?: number;
            /** @description Bare klienter med følgende integrasjonstyper kan bruke dette scopet */
            allowed_integration_types?: ("ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten")[];
            owner_orgno?: string;
            /** @enum {string} */
            token_type?: "SELF_CONTAINED" | "OPAQUE";
            /** @enum {string} */
            visibility?: "INTERNAL" | "PRIVATE" | "PUBLIC";
            requires_user_consent?: boolean;
            requires_user_authentication?: boolean;
            requires_pseudonymous_tokens?: boolean;
            delegation_source?: string;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for utstedt access_token
             */
            at_max_age?: number;
            /**
             * Format: int64
             * @description Maks levetid i sekunder for autorisasjonen
             */
            authorization_max_lifetime?: number;
            accessible_for_all?: boolean;
            enforced_aud_for_access_token?: string;
        };
        PagedModelCloudSyncScope: {
            content?: components["schemas"]["CloudSyncScope"][];
            page?: components["schemas"]["PageMetadata"];
        };
        CloudSyncScopeAccess: {
            scope?: string;
            owner_orgno?: string;
            consumer_orgno?: string;
            state?: string;
            /** Format: int64 */
            created?: number;
            /** Format: int64 */
            last_updated?: number;
        };
        PagedModelCloudSyncScopeAccess: {
            content?: components["schemas"]["CloudSyncScopeAccess"][];
            page?: components["schemas"]["PageMetadata"];
        };
        CloudSyncScopePrefix: {
            prefix?: string;
            owner_orgno?: string;
            /** Format: int64 */
            created?: number;
            /** Format: int64 */
            last_updated?: number;
            active?: boolean;
        };
        PagedModelCloudSyncScopePrefix: {
            content?: components["schemas"]["CloudSyncScopePrefix"][];
            page?: components["schemas"]["PageMetadata"];
        };
        CloudSyncMaskinportenClient: {
            description?: string;
            active?: boolean;
            client_id?: string;
            client_name?: string;
            client_orgno?: string;
            supplier_orgno?: string;
            /** Format: int64 */
            created?: number;
            /** Format: int64 */
            last_updated?: number;
            /** @enum {string} */
            application_type?: "web" | "browser" | "native";
            /** @enum {string} */
            integration_type?: "ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten";
            scopes?: string[];
            grant_types?: ("authorization_code" | "implicit" | "refresh_token" | "urn:ietf:params:oauth:grant-type:jwt-bearer")[];
            /** @enum {string} */
            token_endpoint_auth_method?: "client_secret_post" | "client_secret_basic" | "private_key_jwt" | "none";
            /** Format: int64 */
            refresh_token_lifetime?: number;
            /** @enum {string} */
            refresh_token_usage?: "REUSE" | "ONETIME";
            /** Format: int64 */
            access_token_lifetime?: number;
            /** Format: int64 */
            authorization_lifetime?: number;
            client_secret?: string;
            jwks?: components["schemas"]["JsonWebKeyWrapper"];
            jwks_uri?: string;
            onbehalfof?: components["schemas"]["CloudSyncOnBehalfOf"][];
            client_org_name?: string;
        };
        CloudSyncOnBehalfOf: {
            id?: string;
            orgno?: string;
            name?: string;
            uri?: string;
            logo_uri?: string;
            /**
             * @deprecated
             * @description Use 'id' instead
             */
            onBehalfOf?: string;
        };
        PagedModelCloudSyncMaskinportenClient: {
            content?: components["schemas"]["CloudSyncMaskinportenClient"][];
            page?: components["schemas"]["PageMetadata"];
        };
        CloudSyncIdportenClient: {
            description?: string;
            active?: boolean;
            client_id?: string;
            client_name?: string;
            client_orgno?: string;
            supplier_orgno?: string;
            /** Format: int64 */
            created?: number;
            /** Format: int64 */
            last_updated?: number;
            /** @enum {string} */
            application_type?: "web" | "browser" | "native";
            /** @enum {string} */
            integration_type?: "ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten";
            scopes?: string[];
            grant_types?: ("authorization_code" | "implicit" | "refresh_token" | "urn:ietf:params:oauth:grant-type:jwt-bearer")[];
            /** @enum {string} */
            token_endpoint_auth_method?: "client_secret_post" | "client_secret_basic" | "private_key_jwt" | "none";
            /** Format: int64 */
            refresh_token_lifetime?: number;
            /** @enum {string} */
            refresh_token_usage?: "REUSE" | "ONETIME";
            /** Format: int64 */
            access_token_lifetime?: number;
            /** Format: int64 */
            authorization_lifetime?: number;
            client_secret?: string;
            jwks?: components["schemas"]["JsonWebKeyWrapper"];
            jwks_uri?: string;
            onbehalfof?: components["schemas"]["CloudSyncOnBehalfOf"][];
            logo_uri?: string;
            redirect_uris?: string[];
            post_logout_redirect_uris?: string[];
            frontchannel_logout_session_required?: boolean;
            frontchannel_logout_uri?: string;
            sso_disabled?: boolean;
            /** @enum {string} */
            code_challenge_method?: "none" | "S256";
            /**
             * @deprecated
             * @description Use 'logo_uri' instead
             */
            client_logo_uri?: string;
            client_org_name?: string;
        };
        PagedModelCloudSyncIdportenClient: {
            content?: components["schemas"]["CloudSyncIdportenClient"][];
            page?: components["schemas"]["PageMetadata"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getScope: {
        parameters: {
            query: {
                /** @description Navn på scope */
                scopeName: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Scope_ScopeInternalWithScopeAccess"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    update: {
        parameters: {
            query: {
                /** @description Navn på scope */
                scopeName: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Scope_ScopeInternal"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Scope_ScopeInternal"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    deleteScope: {
        parameters: {
            query: {
                /** @description Navn på scope */
                scopeName: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    updatePrefix: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Navn på scope prefix */
                prefix: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScopePrefix"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScopePrefix"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    deletePrefix: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Navn på scope prefix */
                prefix: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getClient: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    updateClient: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateClientRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    deleteClient: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listForAuthenticatedOrgno: {
        parameters: {
            query?: {
                /** @description Include inactive scopes if set to true. */
                inactive?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Scope_ScopeExternal"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    update_1: {
        parameters: {
            query: {
                /** @description Scope name */
                scope: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Scope_ScopeExternal"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Scope_ScopeExternal"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    addScope: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Scope_ScopeExternal"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Scope_ScopeExternal"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    delete: {
        parameters: {
            query: {
                /** @description Scope name */
                scope: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Scope_ScopeExternal"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    create: {
        parameters: {
            query: {
                /** @description Scope name */
                scope: string;
            };
            header?: never;
            path: {
                /** @description Consumer organization number */
                consumer_orgno: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ScopeAccess"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    remove: {
        parameters: {
            query: {
                /** @description Scope name */
                scope: string;
            };
            header?: never;
            path: {
                /** @description Consumer organization number */
                consumer_orgno: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ScopeAccess"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    update_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateClientRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    delete_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    get_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientOnBehalfOf"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    update_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClientOnBehalfOf"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientOnBehalfOf"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    delete_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getSingleKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                kid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JsonWebKey"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    addOrUpdateSingleKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                kid: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["JsonWebKey"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JsonWebKey"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    deleteSingleKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                kid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getScopesPaged: {
        parameters: {
            query?: {
                page?: number;
                /** @description Prefiks */
                prefix?: string;
                page_size?: number;
                /** @description Spørring */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelScope_ScopeInternal"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    addScope_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Scope_ScopeInternal"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Scope_ScopeInternal"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getPrefixesPaged: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                /** @description Spørring */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelScopePrefix"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    addPrefix: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScopePrefix"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScopePrefix"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getClientsPaged: {
        parameters: {
            query?: {
                page?: number;
                /** @description Spørring */
                search?: string;
                /** @description Tjeneste */
                service?: "ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten";
                page_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    createClient: {
        parameters: {
            query?: {
                id?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddClientRequest"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    updateSecret: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SecretResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    createOnBehalfOfClient: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClientOnBehalfOf"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientOnBehalfOf"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    updateOnBehalfOfClient: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClientOnBehalfOf"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientOnBehalfOf"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    addOrReplaceJwk: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "text/plain": string;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["KeyResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    renewJsonWebKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                kid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JsonWebKey"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    addKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "text/plain": string;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JsonWebKey"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    retrieveAllMaskinportenIntegrations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MaskinportenIntegrationResource"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    makeNewMaskinportenIntegration: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateMaskinportenIntegrationRequestResource"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MaskinportenIntegrationResource"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    deleteClient_1: {
        parameters: {
            query: {
                client_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listMyClients: {
        parameters: {
            query?: {
                inactive?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClientResponse"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    create_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddClientRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    updateSecret_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getAllForClient: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientOnBehalfOf"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    create_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ClientOnBehalfOf"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientOnBehalfOf"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    get_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OidcJwksRequestResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    replace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OidcJwksRequestResponse"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OidcJwksRequestResponse"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    delete_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    switchSyntheticOrganization: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SwitchOrgRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["AuthenticatedOrganization"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getOrganizationName: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orgnr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Organization"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getOrganizationStatistics: {
        parameters: {
            query?: {
                search?: string;
                page?: number;
                page_size?: number;
                sort_by?: string;
                sort_direction?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PageOrganizationStatisticsEntity"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getAllOrganizationKeys: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organizationNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientJsonWebKey"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getScope_1: {
        parameters: {
            query: {
                /** @description Scope name. */
                scope: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Scope_ScopeExternal"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listAll: {
        parameters: {
            query?: {
                /** @description Filter scopes for prefix if set. */
                prefix?: string;
                /** @description Include inactive scopes if set to true. */
                inactive?: boolean;
                /** @description Only scopes that have delegation_source set, even when not registered on the client. */
                delegated_sources?: boolean;
                /** @description Only scopes that are accessible for all, even when not registered on the client. */
                accessible_for_all?: boolean;
                /** @description Only scopes that are applicable for the client's integration type. */
                integration_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Scope_ScopeExternal"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    list: {
        parameters: {
            query?: {
                /** @description Consumer organization number */
                consumer_orgno?: string;
                /** @description Scope name */
                scope?: string;
                /** @description Include inactive scope access if set to true. */
                inactive?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ScopeAccess"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listByOrgno: {
        parameters: {
            query?: {
                /** @description Include inactive scope access if set to true. */
                inactive?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ScopeAccess"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listForOrgno: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ScopePrefix"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    list_1: {
        parameters: {
            query?: {
                /** @description Inkluder inaktive prefikser om satt til 'true'. */
                inactive?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ScopePrefix"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getOrganizationName_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orgnr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Organization"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listIntegrations: {
        parameters: {
            query?: {
                org_number?: string;
                updated_since?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IntegrationResource"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listAllDelegationSources: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DelegationSource"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getAllApprovedScopeAccesses: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScopeDetailsResource"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getOrganizationForAuthenticatedUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["AuthenticatedOrganization"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listIntegrationAPI: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIsResource"][];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listAllScopes: {
        parameters: {
            query?: {
                /**
                 * @description Sideindeks for paginering. Standardverdi er 0.
                 * @example 0
                 */
                page?: number;
                /**
                 * @description Antall klienter som skal hentes per forespørsel. Standardverdi er 200.
                 * @example 100
                 */
                size?: number;
                /**
                 * @description Inkluder inaktive klienter. Standard er `false` (ekskluder inaktive).
                 * @example true
                 */
                inactive?: boolean;
                /**
                 * @description Inkluder descriptions (long_description#en, description#nb, etc. etc. ) Standard er `false`
                 * @example true
                 */
                include_descriptions?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelCloudSyncScope"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    getScopeAccess: {
        parameters: {
            query?: {
                /**
                 * @description Sideindeks for paginering. Standardverdi er 0.
                 * @example 0
                 */
                page?: number;
                /**
                 * @description Antall klienter som skal hentes per forespørsel. Standardverdi er 100.
                 * @example 100
                 */
                size?: number;
                /** @description Filtrer etter ScopeAccessState (REQUESTED,APPROVED,DENIED). */
                state?: "REQUESTED" | "APPROVED" | "DENIED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelCloudSyncScopeAccess"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listAllScopePrefixes: {
        parameters: {
            query?: {
                /**
                 * @description Sideindeks for paginering. Standardverdi er 0.
                 * @example 0
                 */
                page?: number;
                /**
                 * @description Antall klienter som skal hentes per forespørsel. Standardverdi er 100.
                 * @example 100
                 */
                size?: number;
                /**
                 * @description Inkluder inaktive klienter. Standard er `false` (ekskluder inaktive).
                 * @example true
                 */
                inactive?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelCloudSyncScopePrefix"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listMaskinportenClients: {
        parameters: {
            query?: {
                /**
                 * @description Sideindeks for paginering. Standardverdi er 0.
                 * @example 0
                 */
                page?: number;
                /**
                 * @description Antall klienter som skal hentes per forespørsel. Standardverdi er 200.
                 * @example 100
                 */
                size?: number;
                /**
                 * @description Bare ta med klienter som er endret etter denne tidsverdien (millis siden epoch).
                 * @example 1735689600000
                 */
                changed_after?: number;
                /**
                 * @description Inkluder inaktive klienter. Standard er `false` (ekskluder inaktive).
                 * @example true
                 */
                inactive?: boolean;
                /** @description Filtrer etter integrasjonstype(r). Kan oppgi flere verdier. */
                integration_type?: ("ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten")[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelCloudSyncMaskinportenClient"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    listIdportenClients: {
        parameters: {
            query?: {
                /**
                 * @description Sideindeks for paginering. Standardverdi er 0.
                 * @example 0
                 */
                page?: number;
                /**
                 * @description Antall klienter som skal hentes per forespørsel. Standardverdi er 200.
                 * @example 100
                 */
                size?: number;
                /**
                 * @description Bare ta med klienter som er endret etter denne tidsverdien (millisekunder siden epoch)
                 * @example 1735689600000
                 */
                changed_after?: number;
                /**
                 * @description Inkluder inaktive klienter. Standard er `false` (ekskluder inaktive).
                 * @example true
                 */
                inactive?: boolean;
                /** @description Filtrer etter integrasjonstype(r). Kan oppgi flere verdier. */
                integration_type?: ("ansattporten" | "api_klient" | "eformidling" | "idporten" | "idporten_saml2" | "krr" | "maskinporten")[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedModelCloudSyncIdportenClient"];
                };
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    deleteOnBehalfOfClient: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                onBehalfOfId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    deleteJwk: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clientId: string;
                kid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Input ikke i korrekt format */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Autentisert bruker/system har ikke korrekte rettigheter til å utføre forespurt operasjon */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Ressursen er ikke i riktig tilstand */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Uventet feil */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
}
